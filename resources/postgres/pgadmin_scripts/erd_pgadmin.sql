-- Trigger Function for Update Time
CREATE OR REPLACE FUNCTION trigger_update_timestamp ()
    RETURNS TRIGGER
    AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$
LANGUAGE plpgsql;

--  ROW table --------------------------------------------------
CREATE TABLE public.roles (
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY (INCREMENT 1 START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1),
    name character varying(50) NOT NULL,
    page_access_list text[],
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (id))
TABLESPACE image_labelling;

CREATE TRIGGER roles_update
    BEFORE UPDATE ON public.roles
    FOR EACH ROW
    EXECUTE PROCEDURE trigger_update_timestamp ();

-- INSERT pre-defined values into ROLES
INSERT INTO public.roles (
    name,
    page_access_list)
VALUES (
    'Administrator',
    ARRAY['Login', 'Project', 'Dataset', 'Editor', 'Model Training', 'Deployment', 'User Management']),
(
    'Developer 1 (Deployment)',
    ARRAY['Login', 'Project', 'Dataset', 'Editor', 'Model Training', 'Deployment']),
(
    'Developer 2 (Model Training)',
ARRAY['Login', 'Project', 'Dataset', 'Editor', 'Model Training']),
(
    'Annotator',
ARRAY['Login', 'Project', 'Dataset', 'Editor']);

-- USER table ------------------------------------------------
CREATE TABLE IF NOT EXISTS public.user (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (INCREMENT 1 START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1),
    emp_id text UNIQUE,
    username text NOT NULL UNIQUE,
    first_name text,
    last_name text,
    email text,
    department text,
    position text,
    psd text NOT NULL,
    role_id integer NOT NULL,
    account_status character varying(30) NOT NULL CHECK (account_status IN ('NEW', 'ACTIVE', 'LOCKED', 'LOGGED_IN', 'LOGGED_OUT')),
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    last_activity timestamp with time zone,
    PRIMARY KEY (id),
    CONSTRAINT fk_role_id FOREIGN KEY (role_id) REFERENCES public.roles (id) ON DELETE SET NULL)
TABLESPACE image_labelling;

CREATE TRIGGER user_update
    BEFORE UPDATE ON public.user
    FOR EACH ROW
    EXECUTE PROCEDURE trigger_update_timestamp ();