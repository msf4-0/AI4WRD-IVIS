{"version":3,"sources":["LabelStudioEditor.tsx","index.tsx"],"names":["withStreamlitConnection","args","config","interfaces","user","task","LS_args","useMemo","ST_args","console","log","create_args","frameHeightCalc","componentFullHeight","frameHeight","updateFrameHeight","canvas","document","getElementsByClassName","length","Streamlit","setFrameHeight","client_height","clientHeight","useEffect","return_results","annotations","flag","status","results","serializeAnnotation","array","setComponentValue","LabelStudio","onLabelStudioLoad","LS","c","annotationStore","addAnnotation","userGenerate","selectAnnotation","id","onSubmitAnnotation","onUpdateAnnotation","onDeleteAnnotation","onSkipTask","style","height","width","overflow","ReactDOM","render","StrictMode","href","rel","getElementById"],"mappings":"uOAwMeA,mBAlKf,YAAoE,IAAvCC,EAAsC,EAAtCA,KAErBC,EAASD,EAAKC,OACdC,EAAaF,EAAKE,WAClBC,EAAOH,EAAKG,KACZC,EAAOJ,EAAKI,KAKZC,EAAUC,mBACd,kBAuIJ,SACEL,EACAC,EACAC,EACAC,GAEA,IAAMG,EAAU,CACdN,OAAQA,EACRC,WAAYA,EACZC,KAAMA,EACNC,KAAMA,GAGR,OADAI,QAAQC,IAAI,UAAWF,GAChBA,EApJOG,CAAYT,EAAQC,EAAYC,EAAMC,KAClD,CAACH,EAAQC,EAAYC,EAAMC,IAU7B,SAASO,EAAgBC,GACvB,IACIC,EAAcD,EADH,GAGf,OADAJ,QAAQC,IAAI,cAAeI,GACpBA,EAKT,SAASC,IAEP,IAAIC,EAASC,SAASC,uBACpB,iCAKF,GAHAT,QAAQC,IAAI,UAAWM,GAGD,IAAlBA,EAAOG,OAAc,CACvBV,QAAQC,IAAI,QAIZU,IAAUC,eAAeT,EAFP,YAGb,GAAsB,IAAlBI,EAAOG,OAAc,CAC9BV,QAAQC,IAAI,YAEZ,IAAIY,EAAgBN,EAAO,GAAGO,aAE9BH,IAAUC,eAAeT,EAAgBU,KAuF7C,OA7GAb,QAAQC,IAAI,UAAWJ,GA6BvBkB,qBAAU,WAER,SAASC,EAEPC,GAOC,IAHDC,EAGA,uDAHe,EAEfC,EACA,uCACIC,EAAU,GACM,OAAhBH,IAEFG,EAAUH,EAAYI,uBAGxB,IAAIC,EAAQ,CAACF,EAASF,GAEtBP,IAAUY,kBAAkBD,GAC5BtB,QAAQC,IAAI,CAAEkB,UAAU,eAAgB,CAAEC,WAAW,OAAQ,CAAEF,SAO/C,IAAIM,IAAY,eAAgB,CAChD/B,OAAQI,EAAQJ,OAChBC,WAAYG,EAAQH,WACpBC,KAAME,EAAQF,KACdC,KAAMC,EAAQD,KAEd6B,kBAAmB,SAAUC,GAC3B1B,QAAQC,IAAI,OAAQyB,GAKpB,IAAIC,EAAID,EAAGE,gBAAgBC,cAAc,CACvCC,cAAc,IAEhBJ,EAAGE,gBAAgBG,iBAAiBJ,EAAEK,KAExCC,mBAAoB,SAAUP,EAAST,GACrCjB,QAAQC,IAAI,MAAO,CAAEyB,OAIrBV,EAAeC,EAHJ,EACE,mBAIfiB,mBAAoB,SAAUR,EAAST,GACrCjB,QAAQC,IAAI,aAAc,CAAEyB,OAI5BV,EAAeC,EAHJ,EACE,sBAIfkB,mBAAoB,SAAUT,EAAST,GACrCjB,QAAQC,IAAI,aAAc,CAAEyB,OAI5BV,EAAeC,EAHJ,EACE,sBAIfmB,WAAY,SAAUV,GACpB1B,QAAQC,IAAI,WAAY,CAAEyB,OAK1BV,EADkB,KAHP,EACE,gBAMjBV,OAGFA,IAGE,qBACE+B,MAAO,CAAEC,OAAQ,OAAQC,MAAO,OAAQC,SAAU,WAClDR,GAAG,oB,MCzJTS,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,sBACEC,KAAK,iEACLC,IAAI,eAEN,qBAAKb,GAAG,eAAR,SACE,cAAC,EAAD,SAGJxB,SAASsC,eAAe,W","file":"static/js/main.e4cf1206.chunk.js","sourcesContent":["/* \nLabel Studio (TM)\nCopyright (c) 2019-2021 Heartex, Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. \n\nModifications Copyright (c) 2021 Selangor Human Resource Development Centre. All Rights Reserved.\n* 1. Adaptations to Streamlit Component API (https://docs.streamlit.io/en/stable/develop_streamlit_components.html)\n*/\n\nimport { ReactElement, useEffect, useMemo } from \"react\"\n\nimport {\n  Streamlit,\n  withStreamlitConnection,\n  ComponentProps,\n} from \"streamlit-component-lib\"\n\nimport LabelStudio from \"label-studio\"\nimport \"label-studio/build/static/css/main.css\"\n\ninterface Args {\n  config: string\n  interfaces: string[]\n  user: Object\n  task: Object\n}\n\nfunction LabelStudioEditor({ args }: ComponentProps): ReactElement {\n  /* Streamlit Component Arguments */\n  const config = args.config\n  const interfaces = args.interfaces\n  const user = args.user\n  const task = args.task\n\n  /*Load arguments into Args interface\n   * Args:config, interfaces, user, task\n   */\n  const LS_args = useMemo(\n    (): Args => create_args(config, interfaces, user, task),\n    [config, interfaces, user, task]\n  )\n\n  /* Function to dynamically calc frame height with 20px offset\n   *Args:\n   *componentFullHeight[int]: obtained from clientHeight of element\n   \n   Return:\n   *frameHeight[int]: frame height to be set with Streamlit.setFrameHeight()\n   */\n  function frameHeightCalc(componentFullHeight: number) {\n    const offset = 20\n    let frameHeight = componentFullHeight + offset\n    console.log(\"frameHeight\", frameHeight)\n    return frameHeight\n  }\n  console.log(\"useMemo\", LS_args)\n\n  /* Function to Update Frame Height */\n  function updateFrameHeight() {\n    /* Get DOM element for LS Editor <div> */\n    let canvas = document.getElementsByClassName(\n      \"App_editorfs__1aruF ls-editor\"\n    )\n    console.log(\"Outside\", canvas)\n\n    /* Set initial render height in case <div> tag not found for className */\n    if (canvas.length === 0) {\n      console.log(\"NULL\")\n\n      let frameHeight = 1500\n\n      Streamlit.setFrameHeight(frameHeightCalc(frameHeight))\n    } else if (canvas.length !== 0) {\n      console.log(\"NOT NULL\")\n      /* Obtain clientHeight attribute from HTMLContainer  */\n      let client_height = canvas[0].clientHeight\n\n      Streamlit.setFrameHeight(frameHeightCalc(client_height))\n    }\n  }\n\n  /* useEffect Hook to render functions when there the component re-renders\n   * Does not include explicit dependencies to allow continuos render\n   */\n  useEffect(() => {\n    /* Function to RETURN ANNOTATION RESULTS back to Python Land */\n    function return_results(\n      /* annotation raw results from Label Studio */\n      annotations: any,\n      /* Used to indicate status of the annotation process\n       * 0(Load),1(Submit),2(Update),3(Delete),4(Skip)\n       */\n      flag: number = 1,\n      /* indicate labelling status `for logging purposes` */\n      status: string\n    ) {\n      let results = {}\n      if (annotations !== null) {\n        /* Generate serialised JSON of the annotation results */\n        results = annotations.serializeAnnotation()\n      }\n      /* Place 'results' and 'flag' into an array */\n      let array = [results, flag]\n      /* Return array back to Python Land */\n      Streamlit.setComponentValue(array)\n      console.log({ status }, \"Annotations:\", { results }, \"Flag\", { flag })\n    }\n\n    /*\n     *Instantiate Label Studio\n     */\n    // eslint-disable-next-line\n    var labelStudio = new LabelStudio(\"label-studio\", {\n      config: LS_args.config,\n      interfaces: LS_args.interfaces,\n      user: LS_args.user,\n      task: LS_args.task,\n\n      onLabelStudioLoad: function (LS: any) {\n        console.log(\"Load\", LS)\n        /* let flag = 0 // Skip Task Flag\n        let status = \"Load\"\n        const annotations = null //return nothing */\n        // return_results(annotations, flag, status)\n        var c = LS.annotationStore.addAnnotation({\n          userGenerate: true,\n        })\n        LS.annotationStore.selectAnnotation(c.id)\n      },\n      onSubmitAnnotation: function (LS: any, annotations: any) {\n        console.log(\"LS:\", { LS })\n        let flag = 1 // New Submission Flag\n        let status = \"New Submission\"\n\n        return_results(annotations, flag, status)\n      },\n      onUpdateAnnotation: function (LS: any, annotations: any) {\n        console.log(\"LS update:\", { LS })\n        let flag = 2 // Update Submission Flag\n        let status = \"Update Submission\"\n\n        return_results(annotations, flag, status)\n      },\n      onDeleteAnnotation: function (LS: any, annotations: any) {\n        console.log(\"LS Delete:\", { LS })\n        let flag = 3 // Update Submission Flag\n        let status = \"Delete Submission\"\n\n        return_results(annotations, flag, status)\n      },\n      onSkipTask: function (LS: any) {\n        console.log(\"LS Skip:\", { LS })\n        let flag = 4 // Skip Task Flag\n        let status = \"Skip Task\"\n        //return nothing\n        let annotations = null\n        return_results(annotations, flag, status)\n      },\n    })\n    updateFrameHeight()\n  })\n\n  updateFrameHeight()\n\n  return (\n    <div\n      style={{ height: \"100%\", width: \"100%\", overflow: \"visible\" }}\n      id=\"label-studio\"\n    ></div>\n  )\n}\n\n/* Function to generate LS_args  */\nfunction create_args(\n  config: string,\n  interfaces: string[],\n  user: JSON,\n  task: JSON\n) {\n  const ST_args = {\n    config: config,\n    interfaces: interfaces,\n    user: user,\n    task: task,\n  }\n  console.log(\"UseMemo\", ST_args)\n  return ST_args\n}\n\nexport default withStreamlitConnection(LabelStudioEditor)\n","/* \nCopyright (C) 2021 Selangor Human Resource Development Centre\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License. \n\nCopyright (C) 2021 Selangor Human Resource Development Centre\nSPDX-License-Identifier: Apache-2.0\n========================================================================================\n*/\n\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport LabelStudioEditor from \"./LabelStudioEditor\"\nimport \"./ls.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <link\n      href=\"https://unpkg.com/label-studio@1.0.1/build/static/css/main.css\"\n      rel=\"stylesheet\"\n    />\n    <div id=\"label-studio\">\n      <LabelStudioEditor />\n    </div>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}